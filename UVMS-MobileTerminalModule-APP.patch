diff --git a/message-impl/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/producer/bean/MobileTerminalProducerBean.java b/message-impl/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/producer/bean/MobileTerminalProducerBean.java
index 43d269b..2f8b48d 100644
--- a/message-impl/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/producer/bean/MobileTerminalProducerBean.java
+++ b/message-impl/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/producer/bean/MobileTerminalProducerBean.java
@@ -46,7 +46,7 @@ public class MobileTerminalProducerBean extends AbstractProducer implements Mobi
         responseQueue = JMSUtils.lookupQueue(MessageConstants.COMPONENT_RESPONSE_QUEUE);
         auditQueue = JMSUtils.lookupQueue(MessageConstants.AUDIT_MODULE_QUEUE);
         exchangeQueue = JMSUtils.lookupQueue(MessageConstants.EXCHANGE_MODULE_QUEUE);
-        configQueue = JMSUtils.lookupQueue(ConfigConstants.CONFIG_MESSAGE_IN_QUEUE);
+        configQueue = JMSUtils.lookupQueue(eu.europa.ec.fisheries.uvms.commons.message.api.MessageConstants.QUEUE_CONFIG);
     }
 
     /**
@@ -60,11 +60,10 @@ public class MobileTerminalProducerBean extends AbstractProducer implements Mobi
     @Override
     @TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)
     public String sendDataSourceMessage(String text, DataSourceQueue queue) throws MobileTerminalMessageException {
-        ConnectionFactory connectionFactory = JMSUtils.lookupConnectionFactory();
-        Connection connection = null;
-        try {
-            connection = connectionFactory.createConnection();
-            final Session session = JMSUtils.connectToQueue(connection);
+        try (
+                Connection connection = JMSUtils.getConnectionV2();
+                Session session = JMSUtils.createSessionAndStartConnection(connection)
+        ) {
             TextMessage message = session.createTextMessage();
             message.setJMSReplyTo(responseQueue);
             message.setText(text);
@@ -76,8 +75,6 @@ public class MobileTerminalProducerBean extends AbstractProducer implements Mobi
         } catch (Exception e) {
             LOG.error("[ Error when sending data source message. ] {}", e.getMessage());
             throw new MobileTerminalMessageException(e.getMessage());
-        } finally {
-            JMSUtils.disconnectQueue(connection);
         }
     }
 
diff --git a/mobileterminal-message-mock/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/consumer/bean/MobileTerminalMobileTerminaleConsumer.java b/mobileterminal-message-mock/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/consumer/bean/MobileTerminalMobileTerminaleConsumer.java
index bd7e9be..3dac9bb 100644
--- a/mobileterminal-message-mock/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/consumer/bean/MobileTerminalMobileTerminaleConsumer.java
+++ b/mobileterminal-message-mock/src/main/java/eu/europa/ec/fisheries/uvms/mobileterminal/message/consumer/bean/MobileTerminalMobileTerminaleConsumer.java
@@ -22,7 +22,6 @@ import eu.europa.ec.fisheries.uvms.mobileterminal.message.consumer.MobileTermina
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import javax.annotation.PostConstruct;
 import javax.ejb.Stateless;
 import javax.jms.*;
 
@@ -31,22 +30,16 @@ public class MobileTerminalMobileTerminaleConsumer implements MobileTerminaleCon
 
     private final static Logger LOG = LoggerFactory.getLogger(MobileTerminalMobileTerminaleConsumer.class);
 
-    private ConnectionFactory connectionFactory;
-
-    @PostConstruct
-    private void init() {
-        connectionFactory = JMSUtils.lookupConnectionFactory();
-    }
-
     @Override
     public <T> T getMessageFromOutQueue(String correlationId, Class type) {
 
         Message message = null;
     	Connection connection=null;
+        Session session = null;
 
         try {
-            connection = connectionFactory.createConnection();
-            final Session session = JMSUtils.connectToQueue(connection);
+            connection = JMSUtils.getConnectionV2();
+            session = JMSUtils.createSessionAndStartConnection(connection);
             
             message = session.createTextMessage(createResponse());
             message.setJMSCorrelationID(correlationId);
@@ -55,7 +48,7 @@ public class MobileTerminalMobileTerminaleConsumer implements MobileTerminaleCon
         } catch (ExchangeModelMarshallException | JMSException   e) {
         	LOG.warn("Problem getMessageFromOutQueue",e);
         } finally{
-        	JMSUtils.disconnectQueue(connection);
+        	JMSUtils.disconnectQueue(connection, session, (MessageConsumer) null);
         }
 
         return (T) message;
diff --git a/pom.xml b/pom.xml
index 3e91bb9..a473f20 100644
--- a/pom.xml
+++ b/pom.xml
@@ -17,12 +17,12 @@
     <properties>
     	<mobile.api.check.against.version>4.0.0</mobile.api.check.against.version>
     	<docker.dev.version>3.25.0</docker.dev.version>
-		<usm4uvms.version>4.0.12</usm4uvms.version>
-		<uvms.common.version>3.0.25</uvms.common.version>
-        <uvms.config.artifactId>uvms-config</uvms.config.artifactId>
-        <uvms.config.version>4.0.0</uvms.config.version>
-        <audit.model.version>4.0.4</audit.model.version>
-        <exchange.model.version>4.0.14</exchange.model.version>
+		<usm4uvms.version>4.0.15.1-SNAPSHOT</usm4uvms.version>
+		<uvms.common.version>3.4-SNAPSHOT</uvms.common.version>
+        <uvms.config.artifactId>config-library</uvms.config.artifactId>
+        <uvms.config.version>4.2-SNAPSHOT</uvms.config.version>
+        <audit.model.version>4.0.10</audit.model.version>
+        <exchange.model.version>4.0.35-SNAPSHOT</exchange.model.version>
     </properties>
 
 	<dependencies>
diff --git a/service/src/test/java/eu/europa/fisheries/uvms/mobileterminal/service/arquillian/PingReceivedEventBeanTest.java b/service/src/test/java/eu/europa/fisheries/uvms/mobileterminal/service/arquillian/PingReceivedEventBeanTest.java
index e1c187b..2aeb668 100644
--- a/service/src/test/java/eu/europa/fisheries/uvms/mobileterminal/service/arquillian/PingReceivedEventBeanTest.java
+++ b/service/src/test/java/eu/europa/fisheries/uvms/mobileterminal/service/arquillian/PingReceivedEventBeanTest.java
@@ -31,9 +31,10 @@ public class PingReceivedEventBeanTest extends TransactionalTests {
     }
 
     private EventMessage createEventMessage() {
-        ConnectionFactory connectionFactory = JMSUtils.lookupConnectionFactory();
-        try (Connection connection = connectionFactory.createConnection()) {
-            Session session = JMSUtils.connectToQueue(connection);
+        try (
+                Connection connection = JMSUtils.getConnectionV2();
+                Session session = JMSUtils.createSessionAndStartConnection(connection)
+        ) {
             TextMessage textMessage = session.createTextMessage();
             textMessage.setText("TEST_MESSAGE");
             EventMessage message = new EventMessage(textMessage, "TEST_ERROR");
