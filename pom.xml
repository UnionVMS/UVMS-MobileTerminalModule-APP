<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eu.europa.ec.fisheries.uvms.mobileterminal</groupId>
    <artifactId>mobileterminal</artifactId>
    <version>3.0.7-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>Maven projekt-archetype for UnionVms modules</description>

	<parent>
		<groupId>fish.focus.uvms.maven</groupId>
		<artifactId>uvms-pom</artifactId>
		<version>2.1.1</version>
	</parent>

    <properties>
        <uvms.commons.version>2.0.17</uvms.commons.version>
        <mobileterminal.model.classifier>date</mobileterminal.model.classifier>
        <mobileterminal.model.version>3.0.7-SNAPSHOT</mobileterminal.model.version>
        <uvms.config.artifactId>uvms-config</uvms.config.artifactId>
        <uvms.config.version>3.0.4</uvms.config.version>
        <usm4uvms.version>3.0.4</usm4uvms.version>
        <audit.model.version>3.0.4</audit.model.version>
        <exchange.model.version>3.0.4</exchange.model.version>

        <docker.dev.version>3.1.0.pre1</docker.dev.version>
        <docker.dev.start.phase>none</docker.dev.start.phase>
        <docker.dev.stop.phase>none</docker.dev.stop.phase>
        <docker.dev.prestop.phase>none</docker.dev.prestop.phase>        
    </properties>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
		</dependency>
	</dependencies>
    <dependencyManagement>
        <dependencies>
        	<dependency>
				<groupId>fish.focus.uvms.maven</groupId>
				<artifactId>uvms-pom-gis-deps</artifactId>
				<version>2.1.1</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>fish.focus.uvms.maven</groupId>
				<artifactId>uvms-pom-logging-deps</artifactId>
				<version>2.1.1</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>fish.focus.uvms.maven</groupId>
				<artifactId>uvms-pom-monitoring-deps</artifactId>
				<version>2.1.1</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>fish.focus.uvms.maven</groupId>
				<artifactId>uvms-pom-test-deps</artifactId>
				<version>2.1.1</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>fish.focus.uvms.maven</groupId>
				<artifactId>uvms-pom-arquillian-deps</artifactId>
				<version>2.1.1</version>
				<type>pom</type>
			</dependency>
        </dependencies>        
    </dependencyManagement>

    <repositories>
        <repository>
            <id>focus-repo</id>
            <name>Focus nexus repository</name>
            <url>http://nexus.focus.fish/nexus</url>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>focus-releases</id>
            <name>UnionVms Repository</name>
            <url>http://nexus.focus.fish/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>focus-snapshots</id>
            <name>UnionVms Snapshot Repository</name>
            <url>http://nexus.focus.fish/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <connection>scm:git:https://github.com/UnionVMS/UVMS-MobileTerminalModule-APP.git</connection>
        <tag>HEAD</tag>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-plugin-plugin</artifactId>
                <version>3.4</version>
                <configuration>
                    <goalPrefix>plugin</goalPrefix>
                    <outputDirectory>target/dir</outputDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.20.1</version>
						<executions>
							<execution>
								<id>verifyallstopped</id>
								<phase>${docker.dev.prestop.phase}</phase>
								<goals>
									<goal>stop</goal>
								</goals>
								<configuration>
									<allContainers>true</allContainers>
								</configuration>								
							</execution>
							<execution>
								<id>start</id>
								<phase>${docker.dev.start.phase}</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>${docker.dev.stop.phase}</phase>
								<goals>
									<goal>stop</goal>
								</goals>
								<configuration>
									<allContainers>true</allContainers>
								</configuration>								
							</execution>
						</executions>
						<configuration>
							<images>
								<image>
									<alias>activemq</alias>
									<name>uvms/activemq:${docker.dev.version}</name>
									<run>
										<net>bridge</net>
										<namingStrategy>none</namingStrategy>
										<ports>
											<port>18161:8161</port>
										</ports>
										<wait>
											<log>database system is ready to accept connections</log>
											<tcp>
												<host>127.0.0.1</host>
												<ports>
													<port>8161</port>
												</ports>
											</tcp>
											<kill>5000</kill>
											<shutdown>5000</shutdown>
											<time>15000</time>
										</wait>
										<log>
											<enabled>true</enabled>
											<color>red</color>
										</log>
										<hostname>activemq</hostname>
									</run>
								</image>
								<image>
									<alias>postgres</alias>
									<name>uvms/postgres-release:${docker.dev.version}</name>
									<run>
										<net>bridge</net>
										<namingStrategy>none</namingStrategy>
										<ports>
											<port>15432:5432</port>
										</ports>
										<wait>
											<log>All uvms databases created</log>
											<time>240000</time>
											<kill>5000</kill>
											<shutdown>5000</shutdown>
										</wait>
										<dependsOn>
											<container>activemq</container>
										</dependsOn>
										<links>
											<link>activemq:activemq</link>
										</links>
										<log>
											<enabled>true</enabled>
											<color>green</color>
										</log>
										<hostname>postgres</hostname>
									</run>
								</image>
								<image>
									<alias>wildfly</alias>
									<name>uvms/wildfly-base:${docker.dev.version}</name>
									<run>
										<net>bridge</net>
										<namingStrategy>none</namingStrategy>
										<links>
											<link>postgres:postgres</link>
											<link>activemq:activemq</link>
										</links>
										<ports>
											<port>9990:9990</port>
											<port>28787:8787</port>
											<port>28080:8080</port>
										</ports>
										<wait>
											<log>WildFly 8.2.0.Final "Tweek" started in</log>
											<time>300000</time>
											<kill>10000</kill>
											<shutdown>10000</shutdown>
										</wait>
										<cmd>
											<shell>/opt/jboss/wildfly/bin/standalone.sh -c
												standalone-uvms.xml -b 0.0.0.0 -bmanagement 0.0.0.0 --debug</shell>
										</cmd>
										<dependsOn>
											<container>postgres</container>
											<container>activemq</container>
										</dependsOn>
										<log>
											<enabled>true</enabled>
											<color>blue</color>
										</log>
										<hostname>wildfly</hostname>
									</run>
								</image>
							</images>
						</configuration>
					</plugin>
				</plugins>
			</build>	
		</profile>
		<profile>
			<id>docker-start</id>
			<properties>
				<docker.dev.start.phase>validate</docker.dev.start.phase>
        		<docker.dev.stop.phase>none</docker.dev.stop.phase>
       			<docker.dev.prestop.phase>none</docker.dev.prestop.phase>        				
			</properties>
		</profile>
		<profile>
			<id>docker-stop</id>
			<properties>
				<docker.dev.start.phase>none</docker.dev.start.phase>
        		<docker.dev.stop.phase>validate</docker.dev.stop.phase>
       			<docker.dev.prestop.phase>validate</docker.dev.prestop.phase>        				
			</properties>
		</profile>		
    </profiles>

    <modules>
        <module>rest</module>
        <module>service</module>
        <module>message</module>
        <module>module</module>
        <module>domain</module>
    </modules>

</project>